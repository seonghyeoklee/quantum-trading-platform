server:
  port: 8080

spring:
  application:
    name: quantum-web-api
  
  # Database Configuration - PostgreSQL
  datasource:
    url: jdbc:postgresql://localhost:5433/quantum_trading
    driver-class-name: org.postgresql.Driver
    username: quantum
    password: quantum123
  
  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
  
  # H2 Console (개발용) - PostgreSQL 사용으로 비활성화
  h2:
    console:
      enabled: false

# JWT Configuration
jwt:
  secret: quantum-trading-platform-jwt-secret-key-for-mvp-development-only-change-in-production
  expiration: 86400 # 24 hours in seconds

# Application Configuration
quantum:
  security:
    allowed-origins:
      - http://localhost:3000
      - http://localhost:8080

# Logging
logging:
  level:
    com.quantum: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG

---
# Production Profile (PostgreSQL)
spring:
  config:
    activate:
      on-profile: production
  
  datasource:
    url: jdbc:postgresql://localhost:5432/quantum_trading
    driver-class-name: org.postgresql.Driver
    username: ${DB_USERNAME:quantum}
    password: ${DB_PASSWORD:quantum123}
  
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  
  h2:
    console:
      enabled: false

# JWT Configuration for Production
jwt:
  secret: ${JWT_SECRET:please-change-this-secret-key-in-production}

logging:
  level:
    com.quantum: INFO
    org.springframework.security: WARN
