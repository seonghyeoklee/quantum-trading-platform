server:
  port: 8080

spring:
  application:
    name: quantum-web-api
  
  # Timezone Configuration
  jackson:
    time-zone: Asia/Seoul

  # Database Configuration - PostgreSQL
  datasource:
    url: jdbc:postgresql://localhost:5432/quantum_trading
    driver-class-name: org.postgresql.Driver
    username: quantum
    password: quantum123

  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: false

  # H2 Console (개발용) - PostgreSQL 사용으로 비활성화
  h2:
    console:
      enabled: false

  # Spring AI Configuration
  ai:
    openai:
      api-key: ${OPENAI_API_KEY:your-api-key-here}
      chat:
        options:
          model: gpt-4o-mini
          temperature: 0.1

# JWT Configuration
jwt:
  secret: quantum-trading-platform-jwt-secret-key-for-mvp-development-only-change-in-production
  expiration: 86400 # 24 hours in seconds

# Application Configuration
quantum:
  security:
    allowed-origins:
      - http://localhost:3000
      - http://localhost:8080

# LogTree Configuration - 계층형 트레이싱 로깅 (Logbook처럼 자동 적용)
logtree:
  enabled: true
  auto-trace-controllers: true   # 🔥 모든 컨트롤러 자동 추적 (어노테이션 불필요)
  auto-trace-services: true      # 🔥 모든 서비스 자동 추적 (어노테이션 불필요)
  auto-trace-repositories: true  # 🔥 모든 리포지토리 자동 추적
  include-headers: false         # 민감한 정보 포함 금지 (Logbook과 동일)
  include-args: true             # 메서드 인자 자동 포함
  include-result: false          # 결과값은 보안상 제외
  track-errors: true             # 에러 자동 추적 (Causality Chain)
  exclude-urls:                  # Logbook과 동일한 제외 URL
    - /actuator/**
    - /docs/**
    - /v3/api-docs/**
    - /health
    - /error
    - /favicon.ico
    - /swagger-ui/**
  exclude-packages:              # 특정 패키지 제외
    - org.springframework.boot.actuate
    - org.springframework.security
  max-depth: 15                  # 충분한 깊이 허용
  colored-output: true
  log-style: tree                # tree 구조로 시각화

# Actuator 설정 (모니터링 포함)
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: always
    prometheus:
      enabled: true
  info:
    env:
      enabled: true
  prometheus:
    metrics:
      export:
        enabled: true

# SpringDoc OpenAPI 설정
springdoc:
  api-docs:
    path: /v3/api-docs
    enabled: true
  swagger-ui:
    path: /docs
    enabled: true
    operationsSorter: method
    tagsSorter: alpha
    displayRequestDuration: true
    defaultModelsExpandDepth: 2
    defaultModelExpandDepth: 2


# Logging - 개발 집중 모드 (모니터링 비활성화)
logging:
  level:
    com.quantum: DEBUG  # 개발 디버그 모드
    org.springframework.security: WARN  # 시큐리티 로그 최소화
    io.netty.resolver.dns: ERROR  # 네티 경고 완전 제거

    # LogTree HTTP 로깅 (Logbook 대체)
    io.github.logtree: DEBUG

    # Spring Web 로깅 최소화
    org.springframework.web: WARN
    org.springframework.web.servlet.DispatcherServlet: WARN

    # SQL 로깅 - p6spy로 깔끔하게
    com.p6spy: INFO
    org.hibernate.SQL: OFF  # Hibernate SQL 로깅 완전 비활성화
    org.hibernate.type.descriptor.sql.BasicBinder: OFF

    # Actuator 모니터링 로그 완전 제거
    org.springframework.boot.actuator: OFF
    io.micrometer: OFF
    org.springframework.web.filter: ERROR

# LogTree 통합 로깅 - HTTP + 메서드 계층 추적
# (Logbook 대체 - HTTP 요청/응답 + 메서드 트레이싱 통합)
