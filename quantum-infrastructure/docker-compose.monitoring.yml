services:
  # Loki - 로그 집계 및 저장
  loki:
    image: grafana/loki:2.9.0
    container_name: quantum-loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./monitoring/loki-config.yml:/etc/loki/local-config.yaml
      - loki-data:/loki
    networks:
      - quantum-monitoring
    restart: unless-stopped

  # Promtail - 로그 수집 에이전트
  promtail:
    image: grafana/promtail:2.9.0
    container_name: quantum-promtail
    volumes:
      - ./monitoring/promtail-config-simple-realtime.yml:/etc/promtail/config.yml
      - ../quantum-web-api/logs:/app/logs:ro
      # 향후 다른 서비스 로그도 추가 가능
      # - ../quantum-adapter-kis/logs:/app/logs-kis:ro
      # - ../quantum-web-client/logs:/app/logs-client:ro
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki
    networks:
      - quantum-monitoring
    restart: unless-stopped

  # Prometheus - 메트릭 수집
  prometheus:
    image: prom/prometheus:v2.47.0
    container_name: quantum-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - quantum-monitoring
    restart: unless-stopped

  # Grafana - 시각화 대시보드
  grafana:
    image: grafana/grafana:10.1.0
    container_name: quantum-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=quantum2024
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - loki
      - prometheus
    networks:
      - quantum-monitoring
    restart: unless-stopped

networks:
  quantum-monitoring:
    driver: bridge

volumes:
  loki-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local