server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://quantum-loki:3100/loki/api/v1/push

scrape_configs:
  # Docker 컨테이너 로그 (모든 quantum 컨테이너)
  - job_name: quantum-containers
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
        filters:
          - name: name
            values: ["quantum-*"]
    relabel_configs:
      - source_labels: ['__meta_docker_container_name']
        regex: '/quantum-(.*)'
        target_label: 'service'
        replacement: '${1}'
      - source_labels: ['__meta_docker_container_name']
        regex: '/(.*)'
        target_label: 'container'
        replacement: '${1}'
      - source_labels: ['__meta_docker_container_log_stream']
        target_label: 'logstream'
    pipeline_stages:
      - docker: {}
      # Log metrics
      - metrics:
          log_entries_total:
            type: Counter
            description: "Total number of log entries by service"
            source: service
            config:
              action: inc

  # 특별한 레이블이 있는 컨테이너 로그
  - job_name: labeled-containers
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
        filters:
          - name: label
            values: ["logging=promtail"]
    relabel_configs:
      - source_labels: ['__meta_docker_container_name']
        regex: '/(.*)'
        target_label: 'container'
      - source_labels: ['__meta_docker_container_label_service']
        target_label: 'service'
      - source_labels: ['__meta_docker_container_log_stream']
        target_label: 'logstream'
    pipeline_stages:
      - docker: {}
      # Log metrics
      - metrics:
          log_entries_total:
            type: Counter
            description: "Total number of log entries by service"
            source: service
            config:
              action: inc

