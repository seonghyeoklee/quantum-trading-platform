server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  # 데모 로그 수집 (실제 파일 마운트 없이)
  - job_name: quantum-demo
    static_configs:
      - targets:
          - localhost
        labels:
          job: quantum-demo
          service: quantum-demo
          environment: development
    pipeline_stages:
      - json:
          expressions:
            timestamp: '@timestamp'
            level: level
            message: message
            logger: logger_name
            trace_id: traceId
            span_id: spanId
            thread: thread
      - labels:
          level:
          logger:
          trace_id:
          service:
      - timestamp:
          source: timestamp
          format: RFC3339Nano

  # FastAPI KIS Adapter 로그 수집
  - job_name: quantum-adapter-kis
    static_configs:
      - targets:
          - localhost
        labels:
          job: quantum-adapter-kis
          service: quantum-adapter-kis
          environment: development
          __path__: /var/log/quantum-adapter-kis/*.log
    pipeline_stages:
      - json:
          expressions:
            timestamp: timestamp
            level: level
            message: message
            logger: name
            module: module
      - labels:
          level:
          logger:
          module:
          service:
      - timestamp:
          source: timestamp
          format: '2006-01-02T15:04:05.000000Z0700'

  # Next.js Frontend 로그 수집 (개발 서버 로그)
  - job_name: quantum-web-client
    static_configs:
      - targets:
          - localhost
        labels:
          job: quantum-web-client
          service: quantum-web-client
          environment: development
          __path__: /var/log/quantum-web-client/*.log
    pipeline_stages:
      - regex:
          expression: '(?P<timestamp>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.\d{3}Z) (?P<level>\w+) (?P<message>.*)'
      - labels:
          level:
          service:
      - timestamp:
          source: timestamp
          format: RFC3339

  # Docker 컨테이너 로그 (production 환경용)
  - job_name: docker-logs
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
        filters:
          - name: label
            values: ["logging=promtail"]
    relabel_configs:
      - source_labels: ['__meta_docker_container_name']
        regex: '/(.*)'
        target_label: 'container'
      - source_labels: ['__meta_docker_container_log_stream']
        target_label: 'logstream'
      - source_labels: ['__meta_docker_container_label_logging_jobname']
        target_label: 'job'

  # 시스템 로그 (선택사항)
  - job_name: system-logs
    static_configs:
      - targets:
          - localhost
        labels:
          job: system
          service: system
          __path__: /var/log/{messages,secure,cron}
    pipeline_stages:
      - regex:
          expression: '(?P<timestamp>\w{3}\s+\d{1,2}\s+\d{2}:\d{2}:\d{2}) (?P<hostname>\S+) (?P<service>\S+): (?P<message>.*)'
      - labels:
          hostname:
          service: